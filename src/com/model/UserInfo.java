package com.model;

// Generated Jul 8, 2016 10:13:14 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UserInfo generated by hbm2java
 */
@Entity
@Table(name = "user_info", catalog = "cest", uniqueConstraints = @UniqueConstraint(columnNames = "userId"))
public class UserInfo implements java.io.Serializable {

	private Integer id;
	private Zone zone;
	private String userId;
	private String password;
	private String type;
	private String address1;
	private String address2;
	private String address3;
	private String city;
	private String state;
	private String pincode;
	private String mobileNumber;
	private String country;
	private Date dob;
	private String param1;
	private Set<Location> locations = new HashSet<Location>(0);

	public UserInfo() {
	}

	public UserInfo(Zone zone, String userId, String password) {
		this.zone = zone;
		this.userId = userId;
		this.password = password;
	}

	public UserInfo(Zone zone, String userId, String password, String type,
			String address1, String address2, String address3, String city,
			String state, String pincode, String mobileNumber, String country,
			Date dob, String param1, Set<Location> locations) {
		this.zone = zone;
		this.userId = userId;
		this.password = password;
		this.type = type;
		this.address1 = address1;
		this.address2 = address2;
		this.address3 = address3;
		this.city = city;
		this.state = state;
		this.pincode = pincode;
		this.mobileNumber = mobileNumber;
		this.country = country;
		this.dob = dob;
		this.param1 = param1;
		this.locations = locations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "zone_id", nullable = false)
	public Zone getZone() {
		return this.zone;
	}

	public void setZone(Zone zone) {
		this.zone = zone;
	}

	@Column(name = "userId", unique = true, nullable = false, length = 45)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "address1", length = 100)
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address2", length = 100)
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "address3", length = 100)
	public String getAddress3() {
		return this.address3;
	}

	public void setAddress3(String address3) {
		this.address3 = address3;
	}

	@Column(name = "city", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "pincode", length = 45)
	public String getPincode() {
		return this.pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	@Column(name = "mobileNumber", length = 45)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@Column(name = "country", length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dob", length = 0)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "param1", length = 45)
	public String getParam1() {
		return this.param1;
	}

	public void setParam1(String param1) {
		this.param1 = param1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInfo")
	public Set<Location> getLocations() {
		return this.locations;
	}

	public void setLocations(Set<Location> locations) {
		this.locations = locations;
	}

	@Override
	public String toString() {
		return "UserInfo ["
				+ (id != null ? "id=" + id + ", " : "")
				+ (zone != null ? "zone=" + zone + ", " : "")
				+ (userId != null ? "userId=" + userId + ", " : "")
				+ (password != null ? "password=" + password + ", " : "")
				+ (type != null ? "type=" + type + ", " : "")
				+ (address1 != null ? "address1=" + address1 + ", " : "")
				+ (address2 != null ? "address2=" + address2 + ", " : "")
				+ (address3 != null ? "address3=" + address3 + ", " : "")
				+ (city != null ? "city=" + city + ", " : "")
				+ (state != null ? "state=" + state + ", " : "")
				+ (pincode != null ? "pincode=" + pincode + ", " : "")
				+ (mobileNumber != null ? "mobileNumber=" + mobileNumber + ", "
						: "")
				+ (country != null ? "country=" + country + ", " : "")
				+ (dob != null ? "dob=" + dob + ", " : "")
				+ (param1 != null ? "param1=" + param1 + ", " : "")
				+ (locations != null ? "locations=" + locations : "") + "]";
	}
	
	

}
